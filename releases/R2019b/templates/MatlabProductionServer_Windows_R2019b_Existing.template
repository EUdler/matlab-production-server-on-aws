{
  "AWSTemplateFormatVersion": "2010-09-09",
  
  "Description": "MATLAB Production Server (Windows) R2019b with Existing VPC",

  "Parameters" : {
    "KeyPairName" : {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description" : "Enter the Key Pair Name to be used for all EC2 instances. The name must match an existing entry in the EC2 console's Network & Security >> Key Pairs window.",
      "ConstraintDescription": "Must be the name of an existing EC2 Key Pair."
    },
    "SSLCertificateARN": {
      "Description": "(Optional) Enter the ARN to be used for HTTPS connections to the MPS Endpoint. If provided, the ARN must match an existing certificate in the Certificate Manager.",
      "Type": "String",
      "Default": ""
    },
    "NumWorkerNodes": {
      "Description": "Number of worker nodes to start up.",
      "Type": "Number",
      "Default": "2",
      "MinValue": "1",
      "MaxValue": "24"
    },
    "WorkerInstanceType": {
      "Description": "Amazon instance type, see https://aws.amazon.com/ec2/instance-types/",
      "Default": "m5.xlarge",
      "Type": "String",
      "MinLength": 1,
      "ConstraintDescription": "The worker instance type must be specified."
    },
    "ClientIPAddress": {
      "Description": "IP address range allowed for external connections.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "AllowPublicIP": {
      "Description": "Specify whether you want to use public IP addresses and make your solution available over the Internet.",
      "Type": "String",
      "AllowedValues": [
          "Yes",
          "No"
      ],
      "Default": "Yes"
    },
    "EnablePersistence": {
      "Description": "Specify whether you want to create a Redis ElastiCache that lets you use the persistence functionality on the server.",
      "Type": "String",
      "AllowedValues": [
          "Yes",
          "No"
      ],
      "Default": "Yes"
    },
    "ExistingVPC": {
      "Description": "ID of your existing VPC where you want to deploy this solution.",
      "Type": "AWS::EC2::VPC::Id",
      "ConstraintDescription": "Must be the ID of an existing VPC.",
      "Default": ""
    },
    "ExistingVPCAddress": {
      "Description": "Get the IP address range from the existing VPC you selected above.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "ExistingSubnet1": {
      "Description": "ID of an existing subnet that will host the cloud console and other resources.",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "Must be the ID of an existing Subnet.",
      "Default": ""
    },
    "ExistingSubnet2": {
      "Description": "ID of an existing subnet that will host the load balancer.",
      "Type": "AWS::EC2::Subnet::Id",
      "ConstraintDescription": "Must be the ID of an existing Subnet.",
      "Default": ""
    }
  },
  
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Parameters": ["KeyPairName", "SSLCertificateARN", "NumWorkerNodes", "WorkerInstanceType", "ClientIPAddress", "AllowPublicIP", "EnablePersistence", "ExistingVPC", "ExistingVPCAddress", "ExistingSubnet1", "ExistingSubnet2"]
        }
      ],
      "ParameterLabels": {
        "KeyPairName" : { "default" : "Name of existing Key Pair" },
        "SSLCertificateARN": { "default" : "ARN of SSL Certificate" },
        "NumWorkerNodes" : { "default" : "Number of worker nodes" },
        "WorkerInstanceType" : { "default" : "Instance type for the worker nodes" },
        "ClientIPAddress" : { "default": "Allow connections from" },
        "AllowPublicIP" : { "default": "Use public IP addresses" },
        "EnablePersistence" : { "default": "Create Redis ElastiCache" },
        "ExistingVPC" : { "default": "Existing VPC ID" },
        "ExistingVPCAddress" : { "default": "IP address range of existing VPC" },
        "ExistingSubnet1" : { "default": "Subnet 1 ID" },
        "ExistingSubnet2" : { "default": "Subnet 2 ID" }
      }
    }
  },
  
  "Conditions": {
    "HasSSLCertificateARN": {"Fn::Not": [{"Fn::Equals": ["", {"Ref": "SSLCertificateARN"}]}]},
    "DoPublicIP": {"Fn::Equals": ["Yes", {"Ref": "AllowPublicIP"}]},
    "DoPersistence": {"Fn::Equals": ["Yes", {"Ref": "EnablePersistence"}]}
  },
  
  "Mappings" : {
    "RegionMap" : {
        "us-east-1": {
            "AmiVm1": "ami-0be14b718d7208583",
            "AmiVm2": "ami-063f6dac6e2d42bf7",
            "RegionName": "US East (N. Virginia)"
        },
        "eu-west-1": {
            "AmiVm1": "ami-06077de89ebd41274",
            "AmiVm2": "ami-030964fad873af2c0",
            "RegionName": "EU West (Ireland)"
        },
         "ap-northeast-1": {
            "AmiVm1": "ami-0f7faf064b0a209b8",
            "AmiVm2": "ami-0c5aff6d51a9593da",
            "RegionName": "Asia Pacific (Tokyo)"
        }
    }
  },

  "Outputs" : {
    "MatlabProductionServerVM" : {
      "Description" : "Address of the MATLAB Production Server Cloud Console",
      "Value": { "Fn::Join": [ "", [ "https://", { "Fn::If": ["DoPublicIP", {"Fn::GetAtt": ["MatlabProductionServerCloudStackServermachine","PublicDnsName"]}, {"Fn::GetAtt": ["MatlabProductionServerCloudStackServermachine","PrivateDnsName"]}] } ] ] }
    },
    "MatlabProductionServerLogsS3Bucket" : {
      "Description" : "S3 Bucket for MATLAB Production Server logs",
      "Value": { "Fn::Join": [ "", [ "https://console.aws.amazon.com/s3/buckets/", {"Ref": "MatlabProductionServerCloudStackProdBucket"}, "/?region=", {"Ref": "AWS::Region"}, "&tab=overview" ] ] }
    },
    "MatlabProductionServerAutoScalingGroup" : {
      "Description" : "Auto Scaling Group for managing the number of instances",
      "Value": { "Fn::Join": [ "", [ "https://console.aws.amazon.com/ec2/autoscaling/home?region=", {"Ref": "AWS::Region"}, "#AutoScalingGroups:view=details;id=", {"Ref": "MatlabProductionServerCloudStackAsg"}, ";filter=", {"Ref": "MatlabProductionServerCloudStackAsg"} ] ] }
    },
    "MatlabProductionServerInstance" : {
      "Description" : "Instance to get the password for the MATLAB Production Server Cloud Console",
      "Value": { "Fn::Join": [ "", [ "https://console.aws.amazon.com/ec2/home?region=", {"Ref": "AWS::Region"}, "#Instances:search=", {"Ref": "MatlabProductionServerCloudStackServermachine"}, ";sort=tag:Name" ] ] }
    }
  },

  "Resources": {
    "MatlabProductionServerCloudStackProdBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "matlab-production-server-logs-S3-bucket"
          }
        ]
      }
    },
    "MatlabProductionServerCloudStackS3AccessRole" : {
      "DependsOn" : [ "MatlabProductionServerCloudStackProdBucket" ],
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": "ec2.amazonaws.com"},
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [ {
          "PolicyName": "s3-access-policy",
          "PolicyDocument": {
            "Version": "2012-10-17",
            "Statement": [ {
                "Effect": "Allow",
                "Action": ["s3:*"],
                "Resource": [
                  "Fn::Join": [
                    "",
                    [
                      {"Fn::GetAtt": ["MatlabProductionServerCloudStackProdBucket","Arn"]}, "/*"
                    ]
                  ],
                  {"Fn::GetAtt": ["MatlabProductionServerCloudStackProdBucket","Arn"]}
                ]
            } ]
          }
        } ]
      }
    },
    "MatlabProductionServerCloudStackS3ReadwriteIamProfile" : {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ {
          "Ref": "MatlabProductionServerCloudStackS3AccessRole"
        } ]
      }
    },
    "MatlabProductionServerCloudStackElb": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Ref": "ExistingSubnet2"
          },
          {
            "Ref": "ExistingSubnet1"
          }
        ],
        "Scheme": { "Fn::If": ["DoPublicIP", "internet-facing", "internal" ]},
        "HealthCheck": {
          "HealthyThreshold": "10",
          "Interval": "30",
          "Target": "HTTP:9910/~files/hello.html",
          "Timeout": "5",
          "UnhealthyThreshold": "2"
        },
        "ConnectionDrainingPolicy": {
          "Enabled": "true",
          "Timeout": "300"
        },
        "ConnectionSettings": {
          "IdleTimeout": "60"
        },
        "CrossZone": "true",
        "SecurityGroups": [
          {
            "Ref": "MatlabProductionServerCloudStackElb2Sg"
          }
        ],
        "LBCookieStickinessPolicy" : [
          {
            "PolicyName": "LoadBalancerStickinessPolicy1"
          }
        ],
        "Listeners": [
          { "Fn::If": [
            "HasSSLCertificateARN",
            {
              "InstancePort": "9910",
              "LoadBalancerPort": "443",
              "PolicyNames": [ "LoadBalancerStickinessPolicy1" ],
              "Protocol": "HTTPS",
              "InstanceProtocol": "HTTP",
              "SSLCertificateId": {"Ref": "SSLCertificateARN"}
            },
            {
              "InstancePort": "9910",
              "LoadBalancerPort": "80",
              "PolicyNames": [ "LoadBalancerStickinessPolicy1" ],
              "Protocol": "HTTP",
              "InstanceProtocol": "HTTP"
            }
          ]}
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "matlab-production-server-cloud-stack-elb"
          }
        ]
      }
    },
    "MatlabProductionServerCloudStackAsg": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "Cooldown": "300",
        "DesiredCapacity": {"Ref": "NumWorkerNodes"},
        "HealthCheckGracePeriod": "300",
        "HealthCheckType": "EC2",
        "MaxSize": "24",
        "MinSize": "1",
        "VPCZoneIdentifier": [
          { "Ref": "ExistingSubnet1" },
          { "Ref": "ExistingSubnet2" }
        ],
        "LaunchConfigurationName": {
          "Ref": "MatlabProductionServerCloudStackLc"
        },
        "LoadBalancerNames": [
          {
            "Ref": "MatlabProductionServerCloudStackElb"
          }
        ],
        "TerminationPolicies": [
          "Default"
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "matlab-production-server-worker-instance",
            "PropagateAtLaunch": true
          }
        ]
      }
    },
    "MatlabProductionServerCloudStackLc": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": { "Fn::If": ["DoPublicIP", "true", "false" ]},
        "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AmiVm2" ] },
        "IamInstanceProfile": {"Ref": "MatlabProductionServerCloudStackS3ReadwriteIamProfile"},
        "KeyName": { "Ref" : "KeyPairName" },
        "InstanceType": {"Ref": "WorkerInstanceType"},
        "SecurityGroups": [
          {
            "Ref": "MatlabProductionServerCloudStackElb2Sg"
          }
        ],
        "BlockDeviceMappings": [
          {
            "DeviceName": "/dev/sda1",
            "Ebs": {
              "VolumeSize": 120
            }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>",
                "cmd /c echo ", {"Fn::GetAtt": ["MatlabProductionServerCloudStackServermachine","PrivateIp"]}, "    servermachine >> c:\\Windows\\system32\\drivers\\etc\\hosts\n",
                { "Fn::If": ["DoPersistence", 
                  "Fn::Join": [
                    "",
                    [
                      "cmd /c echo { > c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo   \"Connections\": { >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo     \"Connection_Name\": { >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo       \"Provider\": \"Redis\", >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo       \"Host\": \"", {"Fn::GetAtt": ["MatlabProductionServerCloudStackCacheCluster","RedisEndpoint.Address"]}, "\", >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo       \"Port\": ", {"Fn::GetAtt": ["MatlabProductionServerCloudStackCacheCluster","RedisEndpoint.Port"]}, " >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo     } >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo   } >> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n",
                      "cmd /c echo }>> c:\\MathWorks\\mpsInstance\\config\\mps_cache_config\n"
                    ]
                  ], ""
                ]},
                "cmd /c net stop nodereal8000.exe\n",
                "cmd /c echo { > c:\\MathWorks\\clientCode\\dynamicOptions.json\n",
                "cmd /c echo   \"storageAccountName\": \"", {"Ref": "MatlabProductionServerCloudStackProdBucket"}, "\", >> c:\\MathWorks\\clientCode\\dynamicOptions.json\n",
                "cmd /c echo   \"osPlatform\": \"Windows\", >> c:\\MathWorks\\clientCode\\dynamicOptions.json\n",
                "cmd /c echo   \"cloudPlatform\": \"AWS\" >> c:\\MathWorks\\clientCode\\dynamicOptions.json\n",
                "cmd /c echo } >> c:\\MathWorks\\clientCode\\dynamicOptions.json\n",
                "cmd /c net start nodereal8000.exe\n",
                "powershell -Command \"Stop-Service -Name Spooler -Force; Set-Service -Name Spooler -StartupType Disabled\"",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "MatlabProductionServerCloudStackServermachine": {
      "DependsOn" : [ "MatlabProductionServerCloudStackProdBucket", "MatlabProductionServerCloudStackElb" ],
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "DisableApiTermination": "false",
        "IamInstanceProfile": {"Ref": "MatlabProductionServerCloudStackS3ReadwriteIamProfile"},
        "InstanceInitiatedShutdownBehavior": "stop",
        "ImageId": { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AmiVm1" ] },
        "KeyName": { "Ref" : "KeyPairName" },
        "InstanceType": "t2.medium",
        "Monitoring": "false",
        "NetworkInterfaces": [
          {
            "DeleteOnTermination": "true",
            "Description": "Primary network interface",
            "DeviceIndex": 0,
            "SubnetId": {
              "Ref": "ExistingSubnet1"
            },
            "GroupSet": [
              {
                "Ref": "MatlabProductionServerCloudStackElb1Sg"
              }
            ],
            "AssociatePublicIpAddress": { "Fn::If": ["DoPublicIP", "true", "false" ]}
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "matlab-production-server-vm"
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "<script>",
                { "Fn::If": ["DoPersistence", 
                  "Fn::Join": [
                    "",
                    [
                      "cmd /c echo { > c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo   \"Connections\": { >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo     \"Connection_Name\": { >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo       \"Provider\": \"Redis\", >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo       \"Host\": \"", {"Fn::GetAtt": ["MatlabProductionServerCloudStackCacheCluster","RedisEndpoint.Address"]}, "\", >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo       \"Port\": ", {"Fn::GetAtt": ["MatlabProductionServerCloudStackCacheCluster","RedisEndpoint.Port"]}, " >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo     } >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo   } >> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "cmd /c echo }>> c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config\n",
                      "copy c:\\MathWorks\\controllerServer\\html\\currentConfig\\mps_cache_config c:\\MathWorks\\controllerServer\\html\\defaultConfig\\mps_cache_config"
                    ]
                  ], ""
                ]},
                "cmd /c net stop controllerServer5.exe\n",
                "cmd /c echo { > c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c echo   \"storageAccountName\": \"", {"Ref": "MatlabProductionServerCloudStackProdBucket"}, "\", >> c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c echo   \"mpsEndPoint\": \"", {"Fn::If": [ "HasSSLCertificateARN", "https://", "http://"]}, {"Fn::GetAtt": ["MatlabProductionServerCloudStackElb","DNSName"]}, "\", >> c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c echo   \"CIDRRange\": \"", {"Ref": "ExistingVPCAddress" }, "\", >> c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c echo   \"osPlatform\": \"Windows\", >> c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c echo   \"cloudPlatform\": \"AWS\" >> c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c echo } >> c:\\MathWorks\\controllerServer\\config\\dynamicOptions.json\n",
                "cmd /c ping 192.0.2.2 -n 1 -w 10000 > nul & C:\\MathWorks\\controllerServer\\daemon\\controllerserver5.exe restart\n",
                "powershell -Command \"Stop-Service -Name Spooler -Force; Set-Service -Name Spooler -StartupType Disabled\"",
                "</script>"
              ]
            ]
          }
        }
      }
    },
    "MatlabProductionServerCloudStackElb1Sg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MATLAB Production Server - Server Machine",
        "VpcId": {
          "Ref": "ExistingVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "10000",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {"Ref": "ExistingVPCAddress" }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "matlab-production-server-cloud-stack-elb-1-sg"
          }
        ]
      }
    },
    "MatlabProductionServerCloudStackElb2Sg": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "MATLAB Production Server - Workers",
        "VpcId": {
          "Ref": "ExistingVPC"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8000",
            "ToPort": "10000",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3389",
            "ToPort": "3389",
            "CidrIp": { "Ref": "ClientIPAddress" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {"Ref": "ExistingVPCAddress" }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "matlab-production-server-cloud-stack-elb-2-sg"
          }
        ]
      }
    },
    "MatlabProductionServerCloudStackSbnGrp": {
      "Type" : "AWS::ElastiCache::SubnetGroup",
      "Condition": "DoPersistence",
      "Properties" : {
        "Description" : "MATLAB Production Server - Redis ElastiCache Subnet Group",
        "SubnetIds" : [ 
          { "Ref": "ExistingSubnet1" },
          { "Ref": "ExistingSubnet2" }
        ]
      }
    },
    "MatlabProductionServerCloudStackCacheCluster": {
      "Type" : "AWS::ElastiCache::CacheCluster",
      "Condition": "DoPersistence",
      "Properties" : {
        "CacheNodeType" : "cache.r5.large",
        "CacheParameterGroupName" : "default.redis5.0",
        "CacheSubnetGroupName" : { "Ref": "MatlabProductionServerCloudStackSbnGrp" },
        "Engine" : "redis",
        "NumCacheNodes" : 1,
        "VpcSecurityGroupIds" : [
          { "Ref": "MatlabProductionServerCloudStackElb1Sg" },
          { "Ref": "MatlabProductionServerCloudStackElb2Sg" }
        ]
      }
    }
  }
}
